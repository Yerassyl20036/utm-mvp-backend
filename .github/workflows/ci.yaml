name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: utm_user
          POSTGRES_PASSWORD: secure_password
          POSTGRES_DB: utm_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U utm_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Wait for PostgreSQL
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U utm_user; then
              echo "PostgreSQL is ready!"
              break
            fi
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          
      - name: Run database migrations
        env:
          DATABASE_URL: postgresql://utm_user:secure_password@localhost:5432/utm_db
          SECRET_KEY: test-secret-key
          ALGORITHM: HS256
          ACCESS_TOKEN_EXPIRE_MINUTES: 30
        run: |
          alembic upgrade head
          
      - name: Run tests
        env:
          DATABASE_URL: postgresql://utm_user:secure_password@localhost:5432/utm_db
          SECRET_KEY: test-secret-key
          ALGORITHM: HS256
          ACCESS_TOKEN_EXPIRE_MINUTES: 30
        run: |
          python -m pytest --maxfail=1 -v

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Trigger Render Deploy
        run: |
          curl -X POST "https://api.render.com/deploy/srv-d0p1n9uuk2gs73978mi0?key=97jAeFHcjIg"
